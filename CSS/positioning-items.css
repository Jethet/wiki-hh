/* This is the code I used to put a small white speaker icon in a black textfield */

.input-field-speaker {
  padding-left: 20px;
  width: 180px;
  height: 30px;
}

.speaker {
  position: absolute;
  height: 11px;
  margin: 8px;
}

/* The JSX code in the component is: 

  <div>
    <img src="/images/speaker.png" className="speaker" />
    <label>
      <input
        type="text"
        className="input-field-speaker"
        style={{
          color: "white",
          backgroundColor: "black",
          border: "2px solid black",
          height: "30px",
        }}
      />
    </label>
  </div>
*/

/* For a dropdown (from a hamburger menu etc.) use: */
.dropdown {
  position: absolute
}

/* To have a background image for the entire page */
.start-page-container {
  margin: 0 auto;
  height: 100vh;
  width: auto;
  background: url("/images/post-it.jpg");
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  overflow: auto;
  background-attachment: fixed;
}

/* Example to keep the footer at the bottom of the page: Set the bottom edge of the <div>
 element to 10px above the bottom edge of its nearest parent element with some positioning: */

div.absolute {
  position: absolute;
  bottom: 10px;
  width: 50%;
  border: 3px solid #8AC007;
} 

/* In the Chat App I used the following: adjust the html and body as well as the footer*/
html {
  position: relative;
  min-height: 100%;
}

body {
  margin: 0 auto;
  margin-bottom: 60px;
  display: flex;
  flex-direction: column;
}

.footer {
  position: absolute;
  bottom: 0;
  width: 100%;
  height: 60px;
}

/* The JS to place new chats under the previous ones and have these move up: 

const newMessage = chatTemplate.children[0];
chatBody.append(newMessage);

// make sure bottom messages and input field remain visible
newMessage.scrollIntoView();

*/